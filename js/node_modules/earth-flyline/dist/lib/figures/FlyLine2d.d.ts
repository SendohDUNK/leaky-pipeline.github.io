import { Vector3, Group, BufferGeometry, LineBasicMaterial, Line, Points, PointsMaterial } from "three";
import { configType, FlyLineData, LineStyle } from '../../lib/interface';
import Store from '../../lib/store/store';
export default class FlyLine2d {
    _config: configType;
    _store: Store;
    _currentData: FlyLineData;
    _currentConfig: LineStyle;
    constructor(store: Store, currentData: FlyLineData);
    createMesh(positionInfo: [Vector3, Vector3]): Group;
    createPathLine: (points: Vector3[]) => Line<BufferGeometry<import("three").NormalBufferAttributes>, LineBasicMaterial>;
    createShader: (points: Vector3[], tadpoleSize: number) => Points<BufferGeometry<import("three").NormalBufferAttributes>, PointsMaterial>;
    create(src: Vector3, dist: Vector3): Group;
}
